import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        // Scanner to read user input
        Scanner scanner = new Scanner(System.in);
        
        // Loop until a valid password is entered
        while (true) {
            System.out.print("Enter your password: ");
            String password = scanner.nextLine();
            
            // Check if the password is valid
            if (isValidPassword(password)) {
                System.out.println("Password correct.");
                break;  // Exit the loop if the password is valid
            } else {
                System.out.println("Invalid password. Please try again.");
            }
        }
        
        scanner.close();
    }

    // Method to validate the password
    public static boolean isValidPassword(String password) {
        // Rule 1: Password should be at least 12 characters long
        if (password.length() < 12) {
            return false;
        }

        // Rule 2: Password must contain at least 2 digits
        int digitCount = 0;
        for (int i = 0; i < password.length(); i++) {
            if (Character.isDigit(password.charAt(i))) {
                digitCount++;
            }
        }
        if (digitCount < 2) {
            return false;
        }

        // Rule 3: Password must contain at least one uppercase and one lowercase letter
        boolean hasUpperCase = false;
        boolean hasLowerCase = false;
        for (int i = 0; i < password.length(); i++) {
            if (Character.isUpperCase(password.charAt(i))) {
                hasUpperCase = true;
            }
            if (Character.isLowerCase(password.charAt(i))) {
                hasLowerCase = true;
            }
        }
        if (!hasUpperCase || !hasLowerCase) {
            return false;
        }

        // Rule 4: Password must contain one special character from #, $, %, &
        String specialChars = "#$%&";
        boolean hasSpecialChar = false;
        for (int i = 0; i < password.length(); i++) {
            if (specialChars.indexOf(password.charAt(i)) >= 0) {
                hasSpecialChar = true;
                break;
            }
        }
        if (!hasSpecialChar) {
            return false;
        }

        // If all rules are passed, the password is valid
        return true;
    }
}
